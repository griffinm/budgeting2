# Secret template for budgeting2 API
# 
# INSTRUCTIONS:
# 1. Copy your .env.prod file or use the template
# 2. Run the helper script to generate this secret:
#    ./k8s/generate-secret.sh
#
# Or manually create the secret with:
#    kubectl create secret generic budgeting2-api-secret \
#      --from-env-file=.env.prod \
#      --namespace=prod \
#      --dry-run=client -o yaml > k8s/api-secret.yaml
#
# Required environment variables:
# - DATABASE_URL
# - DATABASE_HOST
# - DATABASE_PORT
# - DATABASE_USERNAME
# - DATABASE_PASSWORD
# - REDIS_URL
# - RAILS_ENV
# - RAILS_SERVE_STATIC_FILES
# - RAILS_LOG_TO_STDOUT
# - SECRET_KEY_BASE
# - PLAID_CLIENT_ID
# - PLAID_SECRET
# - RAILS_MASTER_KEY (optional)
# - RAILS_FORCE_SSL (optional)
# - PLAID_ENV (optional, defaults to production)

apiVersion: v1
kind: Secret
metadata:
  name: budgeting2-api-secret
  namespace: prod
  labels:
    app: budgeting2-api
type: Opaque
stringData:
  # Replace these values with your actual configuration
  DATABASE_URL: "postgresql://griffin:griffin@postgres:5432/budgeting2_production"
  DATABASE_HOST: "postgres"
  DATABASE_PORT: "5432"
  DATABASE_USERNAME: "griffin"
  DATABASE_PASSWORD: "REPLACE_WITH_ACTUAL_PASSWORD"
  REDIS_URL: "redis://redis:6379/0"
  RAILS_ENV: "production"
  RAILS_SERVE_STATIC_FILES: "true"
  RAILS_LOG_TO_STDOUT: "true"
  RAILS_FORCE_SSL: "false"
  SECRET_KEY_BASE: "REPLACE_WITH_ACTUAL_SECRET_KEY"
  # RAILS_MASTER_KEY: "REPLACE_IF_NEEDED"
  
  # Plaid API Configuration (REQUIRED for transaction syncing)
  PLAID_CLIENT_ID: "REPLACE_WITH_PLAID_CLIENT_ID"
  PLAID_SECRET: "REPLACE_WITH_PLAID_SECRET"
  PLAID_ENV: "production"

